#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

module OreScript
  class Parser < Racc::Parser

module_eval(<<'...end parser.ry/module_eval...', 'parser.ry', 38)
def parse(str)
  @q = []
  s = StringScanner.new(str)
  until s.empty?
    case
    when s.scan(/\s+/)
      # skip whitespace
    when m = s.scan(/[(){},=]/)
      @q << [m, nil]
    when m = s.scan(/\d+(\.\d+)?/)
      @q << [:NUMBER, m.to_f]
    when m = s.scan(/true|false|fn|if|else/)
      @q << [m, m.to_sym]
    when m = s.scan(/\w+/)
      @q << [:VAR, m]
    else
      raise "no match: #{s.inspect}"
    end
  end

  do_parse
end

def next_token
  @q.shift
end
...end parser.ry/module_eval...
##### State transition tables begin ###

racc_action_table = [
     7,    10,    24,    11,    20,    12,    20,    29,    15,    16,
    17,     7,    10,    22,    11,    28,    12,    23,    33,    15,
    16,    17,     7,    10,    20,    11,    30,    12,    20,    26,
    15,    16,    17,     7,    10,    31,    11,    20,    12,    18,
   nil,    15,    16,    17,     7,    10,   nil,    11,   nil,    12,
   nil,   nil,    15,    16,    17,     7,    10,   nil,    11,   nil,
    12,   nil,   nil,    15,    16,    17,     7,    10,   nil,    11,
   nil,    12,   nil,   nil,    15,    16,    17 ]

racc_action_check = [
     0,     0,    18,     0,    19,     0,    25,    25,     0,     0,
     0,    32,    32,    11,    32,    23,    32,    12,    32,    32,
    32,    32,     2,     2,    27,     2,    28,     2,    21,    21,
     2,     2,     2,    31,    31,    30,    31,     3,    31,     1,
   nil,    31,    31,    31,    10,    10,   nil,    10,   nil,    10,
   nil,   nil,    10,    10,    10,    22,    22,   nil,    22,   nil,
    22,   nil,   nil,    22,    22,    22,    20,    20,   nil,    20,
   nil,    20,   nil,   nil,    20,    20,    20 ]

racc_action_pointer = [
    -2,    39,    20,    34,   nil,   nil,   nil,   nil,   nil,   nil,
    42,     7,    14,   nil,   nil,   nil,   nil,   nil,     2,     1,
    64,    25,    53,    10,   nil,     3,   nil,    21,    22,   nil,
    27,    31,     9,   nil ]

racc_action_default = [
   -20,   -20,    -1,    -2,    -4,    -5,    -6,    -7,    -8,    -9,
   -20,   -14,   -20,   -15,   -16,   -17,   -18,   -19,   -20,    -3,
   -20,   -20,   -20,   -20,    34,   -20,   -10,   -11,   -20,   -13,
   -20,   -20,   -20,   -12 ]

racc_goto_table = [
     2,     1,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    25,   nil,    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    32,    19 ]

racc_goto_check = [
     2,     1,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2,     3 ]

racc_goto_pointer = [
   nil,     1,     0,     0,   nil,   nil,   nil,   nil,   nil,   nil,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     8,     9,    13,
    14 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 14, :_reduce_none,
  1, 15, :_reduce_2,
  2, 15, :_reduce_3,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  3, 16, :_reduce_10,
  3, 17, :_reduce_11,
  7, 18, :_reduce_12,
  4, 19, :_reduce_13,
  1, 20, :_reduce_14,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 22, :_reduce_17,
  1, 23, :_reduce_18,
  1, 23, :_reduce_19 ]

racc_reduce_n = 20

racc_shift_n = 34

racc_token_table = {
  false => 0,
  :error => 1,
  :if => 2,
  "(" => 3,
  ")" => 4,
  :VAR => 5,
  "=" => 6,
  "fn" => 7,
  "{" => 8,
  "}" => 9,
  :NUMBER => 10,
  "true" => 11,
  "false" => 12 }

racc_nt_base = 13

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "if",
  "\"(\"",
  "\")\"",
  "VAR",
  "\"=\"",
  "\"fn\"",
  "\"{\"",
  "\"}\"",
  "NUMBER",
  "\"true\"",
  "\"false\"",
  "$start",
  "program",
  "expressions",
  "expression",
  "let",
  "function",
  "fcall",
  "varref",
  "literal",
  "number",
  "bool" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.ry', 6)
  def _reduce_2(val, _values)
     [:exprs, [val[0]]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 8)
  def _reduce_3(val, _values)
     [:exprs, val[0][1] + [val[1]]] 
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.ry', 15)
  def _reduce_10(val, _values)
     val[1] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 17)
  def _reduce_11(val, _values)
     [:let, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 19)
  def _reduce_12(val, _values)
     [:function, val[2], val[5]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 21)
  def _reduce_13(val, _values)
     [:fcall, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 23)
  def _reduce_14(val, _values)
     [:varref, val[0]] 
  end
.,.,

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.ry', 26)
  def _reduce_17(val, _values)
     [:literal, "number", val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 28)
  def _reduce_18(val, _values)
     [:literal, "bool", true] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 30)
  def _reduce_19(val, _values)
     [:literal, "bool", false] 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

  end   # class Parser
  end   # module OreScript
