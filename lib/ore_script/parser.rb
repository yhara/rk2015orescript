#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

module OreScript
  class Parser < Racc::Parser

module_eval(<<'...end parser.ry/module_eval...', 'parser.ry', 50)
def parse(str)
  @q = []
  s = StringScanner.new(str)
  until s.empty?
    case
    when s.scan(/\s+/)
      # skip whitespace
    when m = s.scan(/[(){},=]/)
      @q << [m, nil]
    when m = s.scan(/\d+(\.\d+)?/)
      @q << [:NUMBER, m.to_f]
    when m = s.scan(/true|false|fn|if|else/)
      @q << [m, m.to_sym]
    when m = s.scan(/\w+/)
      @q << [:VAR, m]
    else
      raise "no match: #{s.inspect}"
    end
  end

  do_parse
end

def next_token
  @q.shift
end
...end parser.ry/module_eval...
##### State transition tables begin ###

racc_action_table = [
    10,    42,    11,    21,    12,    10,    21,    11,    13,    12,
    16,    17,    18,    13,    26,    16,    17,    18,    10,    34,
    11,    36,    12,    21,    29,    35,    13,    37,    16,    17,
    18,    10,    40,    11,    41,    12,    10,    46,    11,    13,
    12,    16,    17,    18,    13,    21,    16,    17,    18,    10,
    21,    11,    25,    12,    10,    45,    11,    13,    12,    16,
    17,    18,    13,    24,    16,    17,    18,    10,    23,    11,
    21,    12,    10,    47,    11,    13,    12,    16,    17,    18,
    13,    48,    16,    17,    18,    10,    19,    11,    32,    12,
    10,   nil,    11,    13,    12,    16,    17,    18,    13,   nil,
    16,    17,    18,    10,   nil,    11,   nil,    12,    21,    38,
   nil,    13,   nil,    16,    17,    18,    10,   nil,    11,   nil,
    12,   nil,    50,   nil,    13,   nil,    16,    17,    18 ]

racc_action_check = [
     0,    38,     0,    20,     0,    48,    27,    48,     0,    48,
     0,     0,     0,    48,    19,    48,    48,    48,     2,    28,
     2,    31,     2,    22,    22,    28,     2,    31,     2,     2,
     2,    44,    36,    44,    37,    44,    10,    44,    10,    44,
    10,    44,    44,    44,    10,    30,    10,    10,    10,    43,
    39,    43,    13,    43,    42,    43,    42,    43,    42,    43,
    43,    43,    42,    12,    42,    42,    42,    40,    11,    40,
     3,    40,    35,    46,    35,    40,    35,    40,    40,    40,
    35,    47,    35,    35,    35,    23,     1,    23,    24,    23,
    21,   nil,    21,    23,    21,    23,    23,    23,    21,   nil,
    21,    21,    21,    25,   nil,    25,   nil,    25,    33,    33,
   nil,    25,   nil,    25,    25,    25,    49,   nil,    49,   nil,
    49,   nil,    49,   nil,    49,   nil,    49,    49,    49 ]

racc_action_pointer = [
    -2,    86,    16,    68,   nil,   nil,   nil,   nil,   nil,   nil,
    34,    63,    61,    50,   nil,   nil,   nil,   nil,   nil,    14,
     1,    88,    21,    83,    84,   101,   nil,     4,    16,   nil,
    43,    18,   nil,   106,   nil,    70,    25,    30,    -6,    48,
    65,   nil,    52,    47,    29,   nil,    62,    74,     3,   114,
   nil ]

racc_action_default = [
   -25,   -25,    -1,    -2,    -4,    -5,    -6,    -7,    -8,    -9,
   -25,   -19,   -25,   -25,   -20,   -21,   -22,   -23,   -24,   -25,
    -3,   -25,   -25,   -25,   -25,   -25,    51,   -16,   -25,   -10,
   -11,   -25,   -13,   -25,   -15,   -25,   -25,   -25,   -25,   -17,
   -25,   -14,   -25,   -25,   -25,   -12,   -25,   -25,   -25,   -25,
   -18 ]

racc_goto_table = [
     2,     1,    20,    31,    28,   nil,   nil,   nil,   nil,   nil,
    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    27,   nil,    30,   nil,    33,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    39,   nil,   nil,   nil,   nil,
    43,   nil,    44,    20,    20,   nil,   nil,   nil,    49,    20 ]

racc_goto_check = [
     2,     1,     3,    10,    11,   nil,   nil,   nil,   nil,   nil,
     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     3,   nil,     3,   nil,     3,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,
     2,   nil,     2,     3,     3,   nil,   nil,   nil,     2,     3 ]

racc_goto_pointer = [
   nil,     1,     0,     0,   nil,   nil,   nil,   nil,   nil,   nil,
   -21,   -17,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
   nil,   nil,    14,    15 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 16, :_reduce_none,
  1, 17, :_reduce_2,
  2, 17, :_reduce_3,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  3, 18, :_reduce_10,
  3, 19, :_reduce_11,
  7, 20, :_reduce_12,
  1, 25, :_reduce_13,
  3, 25, :_reduce_14,
  4, 21, :_reduce_15,
  1, 26, :_reduce_16,
  3, 26, :_reduce_17,
  11, 22, :_reduce_18,
  1, 23, :_reduce_19,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 27, :_reduce_22,
  1, 28, :_reduce_23,
  1, 28, :_reduce_24 ]

racc_reduce_n = 25

racc_shift_n = 51

racc_token_table = {
  false => 0,
  :error => 1,
  "(" => 2,
  ")" => 3,
  :VAR => 4,
  "=" => 5,
  "fn" => 6,
  "{" => 7,
  "}" => 8,
  "," => 9,
  "if" => 10,
  "else" => 11,
  :NUMBER => 12,
  "true" => 13,
  "false" => 14 }

racc_nt_base = 15

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"(\"",
  "\")\"",
  "VAR",
  "\"=\"",
  "\"fn\"",
  "\"{\"",
  "\"}\"",
  "\",\"",
  "\"if\"",
  "\"else\"",
  "NUMBER",
  "\"true\"",
  "\"false\"",
  "$start",
  "program",
  "expressions",
  "expression",
  "let",
  "function",
  "fcall",
  "if",
  "varref",
  "literal",
  "params",
  "args",
  "number",
  "bool" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.ry', 6)
  def _reduce_2(val, _values)
     [:exprs, [val[0]]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 8)
  def _reduce_3(val, _values)
     [:exprs, val[0][1] + [val[1]]] 
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.ry', 15)
  def _reduce_10(val, _values)
     val[1] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 17)
  def _reduce_11(val, _values)
     [:let, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 19)
  def _reduce_12(val, _values)
     [:function, val[2], val[5]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 21)
  def _reduce_13(val, _values)
     [val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 23)
  def _reduce_14(val, _values)
     val[0].push(val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 25)
  def _reduce_15(val, _values)
     [:fcall, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 27)
  def _reduce_16(val, _values)
     [val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 29)
  def _reduce_17(val, _values)
     val[0].push(val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 31)
  def _reduce_18(val, _values)
     [:if, val[2], val[5], val[9]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 34)
  def _reduce_19(val, _values)
     [:varref, val[0]] 
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.ry', 38)
  def _reduce_22(val, _values)
     [:literal, "number", val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 40)
  def _reduce_23(val, _values)
     [:literal, "bool", true] 
  end
.,.,

module_eval(<<'.,.,', 'parser.ry', 42)
  def _reduce_24(val, _values)
     [:literal, "bool", false] 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

  end   # class Parser
  end   # module OreScript
